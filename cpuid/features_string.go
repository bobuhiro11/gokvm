// Code generated by "stringer -type=F1Edx,F7_0Edx -output=features_string.go"; DO NOT EDIT.

package cpuid

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FPU-0]
	_ = x[VME-1]
	_ = x[DE-2]
	_ = x[PSE-3]
	_ = x[TSC-4]
	_ = x[MSR-5]
	_ = x[PAE-6]
	_ = x[MCE-7]
	_ = x[CX8-8]
	_ = x[APIC-9]
	_ = x[SEP-11]
	_ = x[MTRR-12]
	_ = x[PGE-13]
	_ = x[MCA-14]
	_ = x[CMOV-15]
	_ = x[PAT-16]
	_ = x[PSE36-17]
	_ = x[PN-18]
	_ = x[CLFLUSH-19]
	_ = x[DS-21]
	_ = x[ACPI-22]
	_ = x[MMX-23]
	_ = x[FXSR-24]
	_ = x[XMM-25]
	_ = x[XMM2-26]
	_ = x[SELFSNOOP-27]
	_ = x[HT-28]
	_ = x[ACC-29]
	_ = x[IA64-30]
	_ = x[PBE-31]
}

const (
	_F1Edx_name_0 = "FPUVMEDEPSETSCMSRPAEMCECX8APIC"
	_F1Edx_name_1 = "SEPMTRRPGEMCACMOVPATPSE36PNCLFLUSH"
	_F1Edx_name_2 = "DSACPIMMXFXSRXMMXMM2SELFSNOOPHTACCIA64PBE"
)

var (
	_F1Edx_index_0 = [...]uint8{0, 3, 6, 8, 11, 14, 17, 20, 23, 26, 30}
	_F1Edx_index_1 = [...]uint8{0, 3, 7, 10, 13, 17, 20, 25, 27, 34}
	_F1Edx_index_2 = [...]uint8{0, 2, 6, 9, 13, 16, 20, 29, 31, 34, 38, 41}
)

func (i F1Edx) String() string {
	switch {
	case i <= 9:
		return _F1Edx_name_0[_F1Edx_index_0[i]:_F1Edx_index_0[i+1]]
	case 11 <= i && i <= 19:
		i -= 11
		return _F1Edx_name_1[_F1Edx_index_1[i]:_F1Edx_index_1[i+1]]
	case 21 <= i && i <= 31:
		i -= 21
		return _F1Edx_name_2[_F1Edx_index_2[i]:_F1Edx_index_2[i+1]]
	default:
		return "F1Edx(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AVX512_4VNNIW-2]
	_ = x[AVX512_4FMAPS-3]
	_ = x[FSRM-4]
	_ = x[AVX512_VP2INTERSECT-8]
	_ = x[SRBDS_CTRL-9]
	_ = x[MD_CLEAR-10]
	_ = x[RTM_ALWAYS_ABORT-11]
	_ = x[TSX_FORCE_ABORT-13]
	_ = x[SERIALIZE-14]
	_ = x[HYBRID_CPU-15]
	_ = x[TSXLDTRK-16]
	_ = x[PCONFIG-18]
	_ = x[ARCH_LBR-19]
	_ = x[IBT-20]
	_ = x[AMX_BF16-22]
	_ = x[AVX512_FP16-23]
	_ = x[AMX_TILE-24]
	_ = x[AMX_INT8-25]
	_ = x[SPEC_CTRL-26]
	_ = x[INTEL_STIBP-27]
	_ = x[FLUSH_L1D-28]
	_ = x[ARCH_CAPABILITIES-29]
	_ = x[CORE_CAPABILITIES-30]
	_ = x[SPEC_CTRL_SSBD-31]
}

const (
	_F7_0Edx_name_0 = "AVX512_4VNNIWAVX512_4FMAPSFSRM"
	_F7_0Edx_name_1 = "AVX512_VP2INTERSECTSRBDS_CTRLMD_CLEARRTM_ALWAYS_ABORT"
	_F7_0Edx_name_2 = "TSX_FORCE_ABORTSERIALIZEHYBRID_CPUTSXLDTRK"
	_F7_0Edx_name_3 = "PCONFIGARCH_LBRIBT"
	_F7_0Edx_name_4 = "AMX_BF16AVX512_FP16AMX_TILEAMX_INT8SPEC_CTRLINTEL_STIBPFLUSH_L1DARCH_CAPABILITIESCORE_CAPABILITIESSPEC_CTRL_SSBD"
)

var (
	_F7_0Edx_index_0 = [...]uint8{0, 13, 26, 30}
	_F7_0Edx_index_1 = [...]uint8{0, 19, 29, 37, 53}
	_F7_0Edx_index_2 = [...]uint8{0, 15, 24, 34, 42}
	_F7_0Edx_index_3 = [...]uint8{0, 7, 15, 18}
	_F7_0Edx_index_4 = [...]uint8{0, 8, 19, 27, 35, 44, 55, 64, 81, 98, 112}
)

func (i F7_0Edx) String() string {
	switch {
	case 2 <= i && i <= 4:
		i -= 2
		return _F7_0Edx_name_0[_F7_0Edx_index_0[i]:_F7_0Edx_index_0[i+1]]
	case 8 <= i && i <= 11:
		i -= 8
		return _F7_0Edx_name_1[_F7_0Edx_index_1[i]:_F7_0Edx_index_1[i+1]]
	case 13 <= i && i <= 16:
		i -= 13
		return _F7_0Edx_name_2[_F7_0Edx_index_2[i]:_F7_0Edx_index_2[i+1]]
	case 18 <= i && i <= 20:
		i -= 18
		return _F7_0Edx_name_3[_F7_0Edx_index_3[i]:_F7_0Edx_index_3[i+1]]
	case 22 <= i && i <= 31:
		i -= 22
		return _F7_0Edx_name_4[_F7_0Edx_index_4[i]:_F7_0Edx_index_4[i+1]]
	default:
		return "F7_0Edx(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
